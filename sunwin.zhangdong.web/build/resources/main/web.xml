<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">
    <!-- 上下文初始化参数配置 -->
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>webroot</param-value>
    </context-param>
    <!-- 上下文初始化参数配置 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath*:sunwin.zhangdong.web.xml,    <!-- spring MVC -->
            <!--classpath*:sunwin.yois.security.xml, &lt;!&ndash; spring security&ndash;&gt;-->
            classpath*:sunwin.zhangdong.dao.xml,      <!-- spring与mybatis配置文件-->
        </param-value>
    </context-param>
    <!-- 监听web.xml中的配置para-name为webAppRootKey的值 -->
    <listener>
        <listener-class>
            org.springframework.web.util.WebAppRootListener
        </listener-class>
    </listener>
    <!-- 作用就是启动Web容器时，自动装配ApplicationContext的配置信息 -->
    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>

    <!--过滤器可以检查并修改请求和响应的内容。 在请求处理前、响应返回到客户端前;  中间件 -->
    <!--<filter>-->
    <!--<filter-name>springSecurityFilterChain</filter-name>-->
    <!--<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
    <!--<filter-name>springSecurityFilterChain</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->

    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- spring mvc的将军：dispatcherServlet-->
    <servlet>
        <servlet-name>spring-web</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
        <!-- 处理文件上传 -->
        <!--<multipart-config>-->
        <!--<max-file-size>1073741824</max-file-size>-->
        <!--<max-request-size>1073741824</max-request-size>-->
        <!--<file-size-threshold>1073741824</file-size-threshold>-->
        <!--</multipart-config>-->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath*:sunwin.zhangdong.web.xml</param-value>
        </init-param>
    </servlet>
    <!--  截获对应后缀的请求然后进行处理  -->
    <servlet-mapping>
        <servlet-name>spring-web</servlet-name>
        <url-pattern>*.login</url-pattern>
        <url-pattern>*.html</url-pattern>
        <url-pattern>*.json</url-pattern>  <!--不再报406 -->
        <url-pattern>*.vm</url-pattern>
        <url-pattern>*.dll</url-pattern>
        <url-pattern>*.txt</url-pattern>
        <url-pattern>*.exe</url-pattern>
        <url-pattern>*.properties</url-pattern>
    </servlet-mapping>
    <!--<error-page>
        <error-code>404</error-code>
        <location>/404.vm</location>
    </error-page>-->
    <error-page>
        <error-code>403</error-code>
        <location>/403.html</location>
    </error-page>
    <!--<welcome-file-list>-->
        <!--<welcome-file>dream-heaven.vm</welcome-file>  &lt;!&ndash; 这里起作用了&ndash;&gt;-->
    <!--</welcome-file-list>-->
    <session-config>
        <session-timeout>90</session-timeout>
    </session-config>
</web-app>